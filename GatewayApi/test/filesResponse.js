/* eslint-disable max-lines */

module.exports.filesBaseGet = {
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  body: {
    hasBeenSuccessful: true,
    errors: '',
    redirect: 'http://localhost:8082/api/v1/files/',
    content: {
      message: 'Hello from baseGet, FilesController',
    },
  },
  config: {
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    headers: {
      Accept: 'application/json, text/plain, */*',
      authorization: 'Bearer correctToken',
      'User-Agent': 'axios/0.18.0',
    },
    method: 'get',
    url: 'http://localhost:8080/GatewayApi/files/',
    data: undefined,
  },
  files: undefined,
  buffered: true,
  header:
      {
        server: 'GatewayApi',
        'content-encoding': 'gzip',
        'content-type': 'application/json',
        date: 'Tue, 13 Nov 2018 17:28:14 GMT',
        connection: 'close',
        'transfer-encoding': 'chunked',
      },
  statusCode: 200,
  status: 200,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  created: false,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
  notFound: false,
};

module.exports.forbiddenFilesBaseGet = {
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  body: {
    hasBeenSuccessful: false,
    errors: 'Not authorized. Token missing or wrong',
    redirect: 'http://localhost:8082/api/v1/files/',
  },
  config: {
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    headers: {
      Accept: 'application/json, text/plain, */*',
      authorization: 'Bearer wrongToken',
      'User-Agent': 'axios/0.18.0',
    },
    method: 'get',
    url: 'http://localhost:8080/GatewayApi/files/',
    data: undefined,
  },
  files: undefined,
  buffered: true,
  header:
      {
        server: 'GatewayApi',
        'content-encoding': 'gzip',
        'content-type': 'application/json',
        date: 'Tue, 13 Nov 2018 17:28:14 GMT',
        connection: 'close',
        'transfer-encoding': 'chunked',
      },
  statusCode: 403,
  status: 403,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  created: false,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: true,
  notFound: false,
};

module.exports.filesCreateCollectionPost = {
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  body: {
    hasBeenSuccessful: true,
    errors: '',
    redirect: 'http://localhost:8082/api/v1/files/createCollection',
    content: {
      message: 'Created a new collection mochaTest',
    },
  },
  config: {
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    headers: {
      Accept: 'application/json, text/plain, */*',
      authorization: 'Bearer correctToken',
      'User-Agent': 'axios/0.18.0',
    },
    method: 'post',
    url: 'http://localhost:8080/GatewayApi/files/createCollection',
    data: undefined,
  },
  files: undefined,
  buffered: true,
  header: {
    server: 'GatewayApi',
    'content-encoding': 'gzip',
    'content-type': 'application/json',
    accepts: 'POST',
    date: 'Tue, 13 Nov 2018 19:06:19 GMT',
    connection: 'close',
    'transfer-encoding': 'chunked',
  },
  statusCode: 201,
  status: 201,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  created: true,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
};

module.exports.forbiddenFilesCreateCollectionPost = {
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  body: {
    hasBeenSuccessful: false,
    errors: 'Not authorized. Token missing or wrong',
    redirect: 'http://localhost:8082/api/v1/files/createCollection',
  },
  config: {
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    headers: {
      Accept: 'application/json, text/plain, */*',
      authorization: 'Bearer wrongToken',
      'User-Agent': 'axios/0.18.0',
    },
    method: 'post',
    url: 'http://localhost:8080/GatewayApi/files/createCollection',
    data: undefined,
  },
  files: undefined,
  buffered: true,
  header: {
    server: 'GatewayApi',
    'content-encoding': 'gzip',
    'content-type': 'application/json',
    accepts: 'POST',
    date: 'Tue, 13 Nov 2018 19:06:19 GMT',
    connection: 'close',
    'transfer-encoding': 'chunked',
  },
  statusCode: 403,
  status: 403,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  created: true,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: true,
};

module.exports.filesDropCollectionDelete = {
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  body: {
    hasBeenSuccessful: true,
    errors: '',
    redirect: 'http://localhost:8082/api/v1/files/dropCollection',
    content: {
      message: '',
    },
  },
  config: {
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    headers: {
      Accept: 'application/json, text/plain, */*',
      authorization: 'Bearer corectToken',
      'User-Agent': 'axios/0.18.0',
    },
    method: 'delete',
    url: 'http://localhost:8080/GatewayApi/files/dropCollection',
    data: undefined,
  },
  files: undefined,
  buffered: true,
  header: {
    server: 'GatewayApi',
    'content-encoding': 'gzip',
    'content-type': 'application/json',
    accepts: 'DELETE',
    date: 'Tue, 13 Nov 2018 19:16:19 GMT',
    connection: 'close',
    'transfer-encoding': 'chunked',
  },
  statusCode: 204,
  status: 204,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  created: true,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
};

module.exports.forbiddenFilesDropCollectionDelete = {
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  body: {
    hasBeenSuccessful: false,
    errors: 'Not authorized. Token missing or wrong',
    redirect: 'http://localhost:8082/api/v1/files/dropCollection',
  },
  config: {
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    headers: {
      Accept: 'application/json, text/plain, */*',
      authorization: 'Bearer wrongToken',
      'User-Agent': 'axios/0.18.0',
    },
    method: 'delete',
    url: 'http://localhost:8080/GatewayApi/files/dropCollection',
    data: undefined,
  },
  files: undefined,
  buffered: true,
  header: {
    server: 'GatewayApi',
    'content-encoding': 'gzip',
    'content-type': 'application/json',
    accepts: 'DELETE',
    date: 'Tue, 13 Nov 2018 19:16:19 GMT',
    connection: 'close',
    'transfer-encoding': 'chunked',
  },
  statusCode: 403,
  status: 403,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  created: true,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: true,
};

module.exports.filesGetDocPost = {
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  body: {
    hasBeenSuccessful: true,
    errors: '',
    redirect: 'http://localhost:8082/api/v1/files/getDoc',
    content: [{
      _id: '5be9ef05ebeb4807ecd8f82d',
      colname: 'mochaTest',
      fileTitle: 'mochaTest',
      fileLink: 'http://mochaTest.co.uk/',
      author: 'mochaTest',
      deleted: false,
    }],
  },
  config: {
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    headers: {
      Accept: 'application/json, text/plain, */*',
      authorization: 'Bearer corectToken',
      'User-Agent': 'axios/0.18.0',
    },
    method: 'post',
    url: 'http://localhost:8080/GatewayApi/files/getDoc',
    data: undefined,
  },
  files: undefined,
  buffered: true,
  header: {
    server: 'GatewayApi',
    'content-encoding': 'gzip',
    'content-type': 'application/json',
    accepts: 'POST',
    date: 'Tue, 13 Nov 2018 19:16:19 GMT',
    connection: 'close',
    'transfer-encoding': 'chunked',
  },
  statusCode: 200,
  status: 200,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  created: true,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
};

module.exports.forbiddenFilesGetDocPost = {
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  body: {
    hasBeenSuccessful: false,
    errors: 'Not authorized. Token missing or wrong',
    redirect: 'http://localhost:8082/api/v1/files/getDoc',
  },
  config: {
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    headers: {
      Accept: 'application/json, text/plain, */*',
      authorization: 'Bearer wrongToken',
      'User-Agent': 'axios/0.18.0',
    },
    method: 'post',
    url: 'http://localhost:8080/GatewayApi/files/getDoc',
    data: undefined,
  },
  files: undefined,
  buffered: true,
  header: {
    server: 'GatewayApi',
    'content-encoding': 'gzip',
    'content-type': 'application/json',
    accepts: 'POST',
    date: 'Tue, 13 Nov 2018 19:16:19 GMT',
    connection: 'close',
    'transfer-encoding': 'chunked',
  },
  statusCode: 403,
  status: 403,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  created: true,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: true,
};

module.exports.filesAddDocPost = {
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  body: {
    hasBeenSuccessful: true,
    errors: '',
    redirect: 'http://localhost:8082/api/v1/files/addDoc',
    content: {
      message: 'Successfully uploaded',
    },
  },
  config: {
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    headers: {
      Accept: 'application/json, text/plain, */*',
      authorization: 'Bearer correctToken',
      'User-Agent': 'axios/0.18.0',
    },
    method: 'post',
    url: 'http://localhost:8080/GatewayApi/files/addDoc',
    data: undefined,
  },
  files: undefined,
  buffered: true,
  header: {
    server: 'GatewayApi',
    'content-encoding': 'gzip',
    'content-type': 'application/json',
    accepts: 'POST',
    date: 'Tue, 13 Nov 2018 19:06:19 GMT',
    connection: 'close',
    'transfer-encoding': 'chunked',
  },
  statusCode: 201,
  status: 201,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  created: true,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
};

module.exports.forbiddenFilesAddDocPost = {
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  body: {
    hasBeenSuccessful: false,
    errors: 'Not authorized. Token missing or wrong',
    redirect: 'http://localhost:8082/api/v1/files/addDoc',
  },
  config: {
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    headers: {
      Accept: 'application/json, text/plain, */*',
      authorization: 'Bearer correctToken',
      'User-Agent': 'axios/0.18.0',
    },
    method: 'post',
    url: 'http://localhost:8080/GatewayApi/files/addDoc',
    data: undefined,
  },
  files: undefined,
  buffered: true,
  header: {
    server: 'GatewayApi',
    'content-encoding': 'gzip',
    'content-type': 'application/json',
    accepts: 'POST',
    date: 'Tue, 13 Nov 2018 19:06:19 GMT',
    connection: 'close',
    'transfer-encoding': 'chunked',
  },
  statusCode: 403,
  status: 403,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  created: true,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: true,
};

module.exports.filesDelDocPost = {
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  body: {
    hasBeenSuccessful: true,
    errors: '',
    redirect: 'http://localhost:8082/api/v1/files/delDoc',
    content: {
      message: '',
      deleted: true,
    },
  },
  config: {
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    headers: {
      Accept: 'application/json, text/plain, */*',
      authorization: 'Bearer correctToken',
      'User-Agent': 'axios/0.18.0',
    },
    method: 'post',
    url: 'http://localhost:8080/GatewayApi/files/delDoc',
    data: undefined,
  },
  files: undefined,
  buffered: true,
  header: {
    server: 'GatewayApi',
    'content-encoding': 'gzip',
    'content-type': 'application/json',
    accepts: 'PUT',
    date: 'Tue, 13 Nov 2018 19:06:19 GMT',
    connection: 'close',
    'transfer-encoding': 'chunked',
  },
  statusCode: 204,
  status: 204,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  created: true,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
};

module.exports.forbiddenFilesDelDocPost = {
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  body: {
    hasBeenSuccessful: false,
    errors: 'Not authorized. Token missing or wrong',
    redirect: 'http://localhost:8082/api/v1/files/delDoc',
  },
  config: {
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    headers: {
      Accept: 'application/json, text/plain, */*',
      authorization: 'Bearer wrongToken',
      'User-Agent': 'axios/0.18.0',
    },
    method: 'post',
    url: 'http://localhost:8080/GatewayApi/files/delDoc',
    data: undefined,
  },
  files: undefined,
  buffered: true,
  header: {
    server: 'GatewayApi',
    'content-encoding': 'gzip',
    'content-type': 'application/json',
    accepts: 'PUT',
    date: 'Tue, 13 Nov 2018 19:06:19 GMT',
    connection: 'close',
    'transfer-encoding': 'chunked',
  },
  statusCode: 403,
  status: 403,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  created: true,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: true,
};

module.exports.filesGetAllPost = {
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  body: {
    hasBeenSuccessful: true,
    errors: '',
    redirect: 'http://localhost:8082/api/v1/files/getAll',
    content: [{
      _id: '5be9ef05ebeb4807ecd8f82d',
      colname: 'mochaTest',
      fileTitle: 'mochaTest',
      fileLink: 'http://mochaTest.co.uk/',
      author: 'mochaTest',
      deleted: false,
    }, {
      _id: '4be9ef05ebeb4807ecd8f82d',
      colname: 'mochaTest',
      fileTitle: 'mochaTest1',
      fileLink: 'http://mochaTest1.co.uk/',
      author: 'mochaTest',
      deleted: true,
    }],
  },
  config: {
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    headers: {
      Accept: 'application/json, text/plain, */*',
      authorization: 'Bearer correctToken',
      'User-Agent': 'axios/0.18.0',
    },
    method: 'post',
    url: 'http://localhost:8080/GatewayApi/files/getAll',
    data: undefined,
  },
  files: undefined,
  buffered: true,
  header: {
    server: 'GatewayApi',
    'content-encoding': 'gzip',
    'content-type': 'application/json',
    accepts: 'POST',
    date: 'Tue, 13 Nov 2018 19:16:19 GMT',
    connection: 'close',
    'transfer-encoding': 'chunked',
  },
  statusCode: 200,
  status: 200,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  created: true,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
};

module.exports.forbiddenFilesGetAllPost = {
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  body: {
    hasBeenSuccessful: false,
    errors: 'Not authorized. Token missing or wrong',
    redirect: 'http://localhost:8082/api/v1/files/getAll',
  },
  config: {
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    headers: {
      Accept: 'application/json, text/plain, */*',
      authorization: 'Bearer wrongToken',
      'User-Agent': 'axios/0.18.0',
    },
    method: 'post',
    url: 'http://localhost:8080/GatewayApi/files/getAll',
    data: undefined,
  },
  files: undefined,
  buffered: true,
  header: {
    server: 'GatewayApi',
    'content-encoding': 'gzip',
    'content-type': 'application/json',
    accepts: 'POST',
    date: 'Tue, 13 Nov 2018 19:16:19 GMT',
    connection: 'close',
    'transfer-encoding': 'chunked',
  },
  statusCode: 403,
  status: 403,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  created: true,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: true,
};

module.exports.filesForceDeleteDelete = {
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  body: {
    hasBeenSuccessful: true,
    errors: '',
    redirect: 'http://localhost:8082/api/v1/files/forceDelete',
    content: {
      message: '',
    },
  },
  config: {
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    headers: {
      Accept: 'application/json, text/plain, */*',
      authorization: 'Bearer correctToken',
      'User-Agent': 'axios/0.18.0',
    },
    method: 'delete',
    url: 'http://localhost:8080/GatewayApi/files/forceDelete',
    data: undefined,
  },
  files: undefined,
  buffered: true,
  header: {
    server: 'GatewayApi',
    'content-encoding': 'gzip',
    'content-type': 'application/json',
    accepts: 'DELETE',
    date: 'Tue, 13 Nov 2018 19:06:19 GMT',
    connection: 'close',
    'transfer-encoding': 'chunked',
  },
  statusCode: 204,
  status: 204,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  created: true,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
};

module.exports.forbiddenFilesForceDeleteDelete = {
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  body: {
    hasBeenSuccessful: false,
    errors: 'Not authorized. Token missing or wrong',
    redirect: 'http://localhost:8082/api/v1/files/forceDelete',
  },
  config: {
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    headers: {
      Accept: 'application/json, text/plain, */*',
      authorization: 'Bearer wrongToken',
      'User-Agent': 'axios/0.18.0',
    },
    method: 'delete',
    url: 'http://localhost:8080/GatewayApi/files/forceDelete',
    data: undefined,
  },
  files: undefined,
  buffered: true,
  header: {
    server: 'GatewayApi',
    'content-encoding': 'gzip',
    'content-type': 'application/json',
    accepts: 'DELETE',
    date: 'Tue, 13 Nov 2018 19:06:19 GMT',
    connection: 'close',
    'transfer-encoding': 'chunked',
  },
  statusCode: 403,
  status: 403,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  created: true,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: true,
};
